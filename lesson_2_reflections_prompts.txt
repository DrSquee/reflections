What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

How is the staging area different from the working directory and the repository? What value do you think it offers?
is temporary, let you check everything before completing the final action

How can you use the staging area to make sure you have one commit per logical change?
git add, git status

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to experiment, or try different versions at the same time. Also to protect the master branch

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Changes on both branches are included on the merged branch

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
bc there are times when you want your local repository to have testing files

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork: clone on github leaving track of the clone
clone: clone to local from github or from another local
branches: local copy of a repository for testing or creating changes

What is the benefit of having a copy of the last known state of the remote stored locally?
It's more likely that you won't have conflicts when pushing/merging changes. Also less changes will be push making things easier to track.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
it would be harder without using github, since it wouldn't be a common repository, everything would be local
